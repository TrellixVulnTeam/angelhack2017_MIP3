{"_id":"web-audio-api","_rev":"29-0b11392a6627da6709761491d858610f","name":"web-audio-api","description":"Node.js implementation of Web audio API","dist-tags":{"latest":"0.2.2"},"versions":{"0.1.0":{"name":"web-audio-api","version":"0.1.0","author":{"name":"Sébastien Piquemal","email":"sebpiq@gmail.com"},"description":"Node.js implementation of Web audio API","repository":{"type":"git","url":"https://github.com/sebpiq/node-web-audio-api.git"},"keywords":["audio","sound","music","web audio","web audio api","dsp"],"dependencies":{"async":"0.2.x","underscore":"1.4.x","mathjs":"0.9.x","pcm-boilerplate":"*","audiobuffer":"*","speaker":"0.0.x"},"optionalDependencies":{"speaker":"0.0.x"},"analyze":false,"devDependencies":{"mocha":"*","chai":"1.7.x"},"license":"MIT","engines":{"node":">=0.10"},"bugs":{"url":"https://github.com/sebpiq/node-web-audio-api/issues"},"_id":"web-audio-api@0.1.0","dist":{"shasum":"531f029fd8002867a41da5d38e8e4f0f9a58012d","tarball":"https://registry.npmjs.org/web-audio-api/-/web-audio-api-0.1.0.tgz"},"_from":".","_npmVersion":"1.2.32","_npmUser":{"name":"sebpiq","email":"sebpiq@gmail.com"},"maintainers":[{"name":"sebpiq","email":"sebpiq@gmail.com"}],"directories":{}},"0.1.1":{"name":"web-audio-api","version":"0.1.1","author":{"name":"Sébastien Piquemal","email":"sebpiq@gmail.com"},"description":"Node.js implementation of Web audio API","repository":{"type":"git","url":"https://github.com/sebpiq/node-web-audio-api.git"},"keywords":["audio","sound","music","web audio","web audio api","dsp"],"dependencies":{"async":"0.2.x","underscore":"1.4.x","mathjs":"0.9.x","pcm-boilerplate":"*","audiobuffer":"*","speaker":"0.0.x"},"optionalDependencies":{"speaker":"0.0.x"},"analyze":false,"devDependencies":{"mocha":"*","chai":"1.7.x"},"license":"MIT","engines":{"node":">=0.10"},"bugs":{"url":"https://github.com/sebpiq/node-web-audio-api/issues"},"_id":"web-audio-api@0.1.1","dist":{"shasum":"7e9a6215cc06e11950558854cdce03f43c179956","tarball":"https://registry.npmjs.org/web-audio-api/-/web-audio-api-0.1.1.tgz"},"_from":".","_npmVersion":"1.2.32","_npmUser":{"name":"sebpiq","email":"sebpiq@gmail.com"},"maintainers":[{"name":"sebpiq","email":"sebpiq@gmail.com"}],"directories":{}},"0.1.2":{"name":"web-audio-api","version":"0.1.2","author":{"name":"Sébastien Piquemal","email":"sebpiq@gmail.com"},"description":"Node.js implementation of Web audio API","repository":{"type":"git","url":"https://github.com/sebpiq/node-web-audio-api.git"},"keywords":["audio","sound","music","web audio","web audio api","dsp"],"dependencies":{"async":"0.2.x","underscore":"1.4.x","mathjs":"0.9.x","av":"0.2.x","pcm-boilerplate":"*","audiobuffer":"*","speaker":"0.0.x"},"optionalDependencies":{"speaker":"0.0.x"},"analyze":false,"devDependencies":{"mocha":"*","chai":"1.7.x"},"license":"MIT","engines":{"node":">=0.10"},"bugs":{"url":"https://github.com/sebpiq/node-web-audio-api/issues"},"_id":"web-audio-api@0.1.2","dist":{"shasum":"05dafb33a741ef295e3ed7bd2f4edb3901e0616e","tarball":"https://registry.npmjs.org/web-audio-api/-/web-audio-api-0.1.2.tgz"},"_from":".","_npmVersion":"1.3.5","_npmUser":{"name":"sebpiq","email":"sebpiq@gmail.com"},"maintainers":[{"name":"sebpiq","email":"sebpiq@gmail.com"}],"directories":{}},"0.1.3":{"name":"web-audio-api","version":"0.1.3","author":{"name":"Sébastien Piquemal","email":"sebpiq@gmail.com"},"description":"Node.js implementation of Web audio API","repository":{"type":"git","url":"https://github.com/sebpiq/node-web-audio-api.git"},"keywords":["audio","sound","music","web audio","web audio api","dsp"],"dependencies":{"async":"0.2.x","underscore":"1.4.x","mathjs":"0.9.x","av":"0.2.x","pcm-boilerplate":"*","audiobuffer":"*","speaker":"0.0.x"},"optionalDependencies":{"speaker":"0.0.x"},"analyze":false,"devDependencies":{"mocha":"*","chai":"1.7.x"},"license":"MIT","engines":{"node":">=0.10"},"bugs":{"url":"https://github.com/sebpiq/node-web-audio-api/issues"},"_id":"web-audio-api@0.1.3","dist":{"shasum":"f2950834da6b1558643c18b6df2ff783440c99f8","tarball":"https://registry.npmjs.org/web-audio-api/-/web-audio-api-0.1.3.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"sebpiq","email":"sebpiq@gmail.com"},"maintainers":[{"name":"sebpiq","email":"sebpiq@gmail.com"}],"directories":{}},"0.1.4":{"name":"web-audio-api","version":"0.1.4","author":{"name":"Sébastien Piquemal","email":"sebpiq@gmail.com"},"description":"Node.js implementation of Web audio API","repository":{"type":"git","url":"https://github.com/sebpiq/node-web-audio-api.git"},"keywords":["audio","sound","music","web audio","web audio api","dsp"],"dependencies":{"async":"0.2.x","underscore":"1.4.x","mathjs":"0.9.x","av":"0.2.x","pcm-boilerplate":"*","audiobuffer":"*","speaker":"0.0.x"},"optionalDependencies":{"speaker":"0.0.x"},"analyze":false,"devDependencies":{"mocha":"*","chai":"1.7.x"},"license":"MIT","engines":{"node":">=0.10"},"bugs":{"url":"https://github.com/sebpiq/node-web-audio-api/issues"},"_id":"web-audio-api@0.1.4","dist":{"shasum":"50a547359e90afb8427559b2c0bf3552e984623a","tarball":"https://registry.npmjs.org/web-audio-api/-/web-audio-api-0.1.4.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"sebpiq","email":"sebpiq@gmail.com"},"maintainers":[{"name":"sebpiq","email":"sebpiq@gmail.com"}],"directories":{}},"0.1.5":{"name":"web-audio-api","version":"0.1.5","author":{"name":"Sébastien Piquemal","email":"sebpiq@gmail.com"},"description":"Node.js implementation of Web audio API","repository":{"type":"git","url":"https://github.com/sebpiq/node-web-audio-api.git"},"keywords":["audio","sound","music","web audio","web audio api","dsp"],"dependencies":{"async":"0.2.x","underscore":"1.4.x","mathjs":"0.9.x","av":"0.2.x","pcm-boilerplate":"*","audiobuffer":"*","speaker":"0.0.x"},"optionalDependencies":{"speaker":"0.0.x"},"analyze":false,"devDependencies":{"mocha":"*","chai":"1.7.x"},"license":"MIT","engines":{"node":">=0.10"},"bugs":{"url":"https://github.com/sebpiq/node-web-audio-api/issues"},"_id":"web-audio-api@0.1.5","dist":{"shasum":"a79d290d29848e34da47c079355c3931139cd750","tarball":"https://registry.npmjs.org/web-audio-api/-/web-audio-api-0.1.5.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"sebpiq","email":"sebpiq@gmail.com"},"maintainers":[{"name":"sebpiq","email":"sebpiq@gmail.com"}],"directories":{}},"0.2.0":{"name":"web-audio-api","version":"0.2.0","author":{"name":"Sébastien Piquemal","email":"sebpiq@gmail.com"},"description":"Node.js implementation of Web audio API","repository":{"type":"git","url":"https://github.com/sebpiq/node-web-audio-api.git"},"keywords":["audio","sound","music","web audio","web audio api","dsp"],"dependencies":{"async":"0.2.x","underscore":"1.4.x","mathjs":"0.9.x","pcm-boilerplate":"0.1.x","audiobuffer":"0.2.x","speaker":"0.0.x"},"optionalDependencies":{"speaker":"0.0.x"},"analyze":false,"devDependencies":{"chai":"1.7.x","gulp":"3.8.x","gulp-util":"3.0.x","gulp-es6-transpiler":"1.0.x","gulp-contribs":"0.0.x","mocha":"*"},"license":"MIT","engines":{"node":">=0.10"},"scripts":{"pretest":"gulp","test":"mocha","prepublish":"gulp"},"bugs":{"url":"https://github.com/sebpiq/node-web-audio-api/issues"},"homepage":"https://github.com/sebpiq/node-web-audio-api","_id":"web-audio-api@0.2.0","dist":{"shasum":"ff827544f491895e8239d9ad1cd420791dcbcf64","tarball":"https://registry.npmjs.org/web-audio-api/-/web-audio-api-0.2.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sebpiq","email":"sebpiq@gmail.com"},"maintainers":[{"name":"sebpiq","email":"sebpiq@gmail.com"}],"directories":{}},"0.2.1":{"name":"web-audio-api","version":"0.2.1","author":{"name":"Sébastien Piquemal","email":"sebpiq@gmail.com"},"description":"Node.js implementation of Web audio API","repository":{"type":"git","url":"https://github.com/sebpiq/node-web-audio-api.git"},"keywords":["audio","sound","music","web audio","web audio api","dsp"],"dependencies":{"async":"0.2.x","underscore":"1.4.x","mathjs":"0.9.x","pcm-boilerplate":"0.1.x","audiobuffer":"0.2.x","av":"0.4.x","mp3":"0.1.x","flac":"0.3.x","alac":"0.1.x","aac":"0.1.x","speaker":"0.0.x"},"optionalDependencies":{"speaker":"0.0.x"},"analyze":false,"devDependencies":{"chai":"1.7.x","gulp":"3.8.x","gulp-util":"3.0.x","gulp-es6-transpiler":"1.0.x","gulp-contribs":"0.0.x","mocha":"*"},"license":"MIT","engines":{"node":">=0.10"},"scripts":{"pretest":"gulp","test":"mocha","prepublish":"gulp"},"bugs":{"url":"https://github.com/sebpiq/node-web-audio-api/issues"},"homepage":"https://github.com/sebpiq/node-web-audio-api","_id":"web-audio-api@0.2.1","dist":{"shasum":"225a3989007f8ca075688e1ff8502f4c7274cb9e","tarball":"https://registry.npmjs.org/web-audio-api/-/web-audio-api-0.2.1.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sebpiq","email":"sebpiq@gmail.com"},"maintainers":[{"name":"sebpiq","email":"sebpiq@gmail.com"}],"directories":{}},"0.2.2":{"name":"web-audio-api","version":"0.2.2","author":{"name":"Sébastien Piquemal","email":"sebpiq@gmail.com"},"description":"Node.js implementation of Web audio API","repository":{"type":"git","url":"https://github.com/sebpiq/node-web-audio-api.git"},"keywords":["audio","sound","music","web audio","web audio api","dsp"],"dependencies":{"async":"0.9.x","underscore":"1.8.x","pcm-boilerplate":"0.1.x","audiobuffer":"0.2.x","av":"0.4.x","mp3":"0.1.x","flac":"0.3.x","alac":"0.1.x","aac":"0.1.x"},"analyze":false,"devDependencies":{"chai":"1.7.x","gulp":"3.8.x","gulp-util":"3.0.x","gulp-es6-transpiler":"1.0.x","gulp-contribs":"0.0.x","mocha":"*"},"license":"MIT","engines":{"node":">=0.10"},"scripts":{"pretest":"gulp","test":"mocha","prepublish":"gulp"},"bugs":{"url":"https://github.com/sebpiq/node-web-audio-api/issues"},"homepage":"https://github.com/sebpiq/node-web-audio-api","_id":"web-audio-api@0.2.2","dist":{"shasum":"2a5048b5c23d6b79605d4ef24fd7bc30f338de23","tarball":"https://registry.npmjs.org/web-audio-api/-/web-audio-api-0.2.2.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"sebpiq","email":"sebpiq@gmail.com"},"maintainers":[{"name":"sebpiq","email":"sebpiq@gmail.com"}],"directories":{}}},"readme":"Node Web Audio API\n=====================\n\n[![Build Status](https://travis-ci.org/sebpiq/node-web-audio-api.svg)](https://travis-ci.org/sebpiq/node-web-audio-api) [![Dependency Status](https://img.shields.io/gemnasium/sebpiq/node-web-audio-api.svg)](https://gemnasium.com/sebpiq/node-web-audio-api) [![Join the chat at https://gitter.im/sebpiq/node-web-audio-api](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/sebpiq/node-web-audio-api?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nThis library implements the [web audio API specification](http://webaudio.github.io/web-audio-api/) on node.js.\n\nAnd this is not even alpha. Use this library only if you're the adventurous kind.\n\n\nWhat's implemented\n-------------------\n\n- AudioContext(partially)\n- AudioParam (almost there)\n- AudioBufferSourceNode\n- ScriptProcessorNode\n- GainNode\n- OscillatorNode (coming soon)\n- DelayNode (coming soon)\n\n\nInstallation\n--------------\n\n```\nnpm install web-audio-api\n```\n\n\nDemo\n------\n\nGet ready, this is going to blow up your mind :\n\n```\nnpm install\ngulp default\nnode test/manual-testing/AudioContext-sound-output.js\n```\n\n\nAudio output\n-----------------\n\nBy default, **node-web-audio-api** doesn't play back the sound it generates. In fact, an `AudioContext` has no default output, and you need to give it a writable node stream to which it can write raw PCM audio. After creating an `AudioContext`, set its output stream like this : `audioContext.outStream = writableStream`.\n\n### Example : playing back sound with **node-speaker**\n\nThis is probably the simplest way to play back audio. Install **node-speaker** with `npm install speaker`, then do something like this :\n\n```javascript\nvar AudioContext = require('web-audio-api').AudioContext\n  , context = new AudioContext\n  , Speaker = require('speaker')\n\ncontext.outStream = new Speaker({\n  channels: context.format.numberOfChannels,\n  bitDepth: context.format.bitDepth,\n  sampleRate: context.sampleRate\n})\n\n// Create some audio nodes here to make some noise ...\n```\n\n### Example : playing back sound with **aplay**\n\nLinux users can play back sound from **node-web-audio-api** by piping its output to [aplay](http://alsa.opensrc.org/Aplay). For this, simply send the generated sound straight to `stdout` like this :\n\n```javascript\nvar AudioContext = require('web-audio-api').AudioContext\n  , context = new AudioContext\n\ncontext.outStream = process.stdout\n\n// Create some audio nodes here to make some noise ...\n```\n\nThen start your script, piping it to **aplay** like so :\n\n```\nnode myScript.js | aplay -f cd\n```\n\n### Example : creating an audio stream with **icecast2**\n\n[icecast](http://icecast.org/) is a open-source streaming server. It works great, and is very easy to setup. **icecast** accepts connections from [different source clients](http://icecast.org/apps/) which provide the sound to encode and stream. [ices](http://www.icecast.org/ices/) is a client for **icecast** which accepts raw PCM audio from its standard input, and you can send sound from **node-web-audio-api** to **ices** (which will send it to icecast) by simply doing :\n\n```\nvar spawn = require('child_process').spawn\n  , AudioContext = require('web-audio-api').AudioContext\n  , context = new AudioContext()\n\nvar ices = spawn('ices', ['ices.xml'])\ncontext.outStream = ices.stdin\n```\n\nA live example is available on [Sébastien's website](http://funktion.fm/#/projects/versificator-rubbish-stream)\n\n\nUsing Gibber\n---------------\n\n[Gibber](https://github.com/charlieroberts/Gibber) is a great audiovisual live coding environment for the browser made by [Charlie Roberts](http://charlie-roberts.com). For audio, it uses Web Audio API, so you can run it on **node-web-audio-api**. First install gibber with npm : \n\n`npm install gibber.audio.lib`\n\nThen to you can run the following test to see that everything works:\n\n`npm test gibber.audio.lib`\n\n\n\nOverall view of implementation\n------------------------------\n\nEach time you create an ```AudioNode``` (like for instance an ```AudioBufferSourceNode``` or a ```GainNode```), it inherits from ```DspObject``` which is in charge of two things:\n- register schedule events with ```_schedule```\n- compute the appropriate digital signal processing with ```_tick```\n\nEach time you connect an ```AudioNode``` using ```source.connect(destination, output, input)``` it connects the relevant ```AudioOutput``` instances of ```source``` node the the relevant ```AudioInput``` instance of the ```destination``` node.\n\nTo instantiate all of these ```AudioNode```, you needed an overall ```AudioContext``` instance. This latter has a ```destination``` property (where the sound will flow out), instance of ```AudioDestinationNode```, which inherits from ```AudioNode```. The ```AudioContext``` instance keeps track of connections to the ```destination```. When that happens, it triggers the audio loop, calling ```_tick``` infinitely on the ```destination```, which will itself call ```_tick``` on its input ... and so forth go up on the whole audio graph.\n\n\nRunning the debugger\n---------------------\n\nRight now everything runs in one process, so if you set a break point in your code, there's going to be a lot of buffer underflows, and you won't be able to debug anything.\n\nOne trick is to kill the `AudioContext` right before the break point, like this:\n\n```javascript\ncontext._kill()\ndebugger\n```\n\nthat way the audio loop is stopped, and you can inspect your objects in peace.\n\n\nRunning the tests\n------------------\n\nTests are written with mocha. To run them, install mocha with :\n\n```\nnpm install -g mocha\n```\n\nAnd in the root folder run :\n\n```\nnpm test\n```\n\n\nManual testing\n----------------\n\nTo test the sound output, we need to install `node-speaker` (in addition of all the other dependencies), and build the library :\n\n```\nnpm install\nnpm install speaker\ngulp default\nnode test/manual-testing/AudioContext-sound-output.js\n```\n\nTo test `AudioParam` against `AudioParam` implemented in a browser, open `test/manual-testing/AudioParam-browser-plots.html` in that browser.\n\n\nContributors\n-------------\n\n```\n    61\tSébastien Piquemal\n    16\touhouhsami\n     4\tJohn Wnek\n     2\tanprogrammer\n     1\tAndrew Petersen\n```\n\nChangelog\n-----------\n\n#### 0.2.2\n\n- removed `node-speaker` and `mathjs` dependencies\n\n#### 0.2.1\n\n- now use aurora installed from npm instead of distributing a built version of it.\n\n#### 0.2.0\n\n- refactored to ES6\n\n#### 0.1.5\n\n- **AudioNode** and **AudioContext** bug fixes\n\n#### 0.1.4\n\n- **audioports** : bug fixes\n\n#### 0.1.3\n\n- **audioports** : implemented `channelInterpretation` 'speakers'\n- **AudioContext** : added support for mp3 to `decodeAudioData`\n\n#### 0.1.2\n\n- **AudioBufferSourceNode** : handler `onended` implemented\n- **AudioContext** : method `decodeAudioData`, support only for wav\n\n#### 0.1.1\n\n- **ScriptProcessorNode**\n- **AudioBufferSourceNode**\n  - node is killed once it has finished playing\n  - subsequent calls to `start` have no effect\n\n- **AudioContext** : method `collectNodes`\n- **audioports** : bug fixes\n\n#### 0.1.0\n\n- **AudioContext** (partial implementation)\n- **AudioParam** (missing unschedule)\n- **AudioBufferSourceNode** (missing onended)\n- **GainNode**\n","maintainers":[{"name":"sebpiq","email":"sebpiq@gmail.com"}],"time":{"modified":"2015-10-28T08:41:28.402Z","created":"2013-07-31T13:58:46.600Z","0.1.0":"2013-07-31T13:58:53.646Z","0.1.1":"2013-08-08T16:21:33.887Z","0.1.2":"2013-08-16T20:54:58.185Z","0.1.3":"2013-09-03T16:57:26.474Z","0.1.4":"2013-09-05T09:14:42.205Z","0.1.5":"2013-09-10T18:32:39.600Z","0.2.0":"2014-12-15T09:15:21.477Z","0.2.1":"2014-12-16T09:04:15.680Z","0.2.2":"2015-10-28T08:41:28.402Z"},"author":{"name":"Sébastien Piquemal","email":"sebpiq@gmail.com"},"repository":{"type":"git","url":"https://github.com/sebpiq/node-web-audio-api.git"},"users":{"nmante":true,"rchk":true,"thecharlie":true,"piranna":true,"kareemfikry":true,"hollobit":true,"theveil":true,"danielhopp":true,"cstrelioff":true,"mfoltz":true},"homepage":"https://github.com/sebpiq/node-web-audio-api","keywords":["audio","sound","music","web audio","web audio api","dsp"],"bugs":{"url":"https://github.com/sebpiq/node-web-audio-api/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{},"_etag":"W/\"56308a38-4897\"","_lastModified":"Wed, 28 Oct 2015 08:41:28 GMT"}