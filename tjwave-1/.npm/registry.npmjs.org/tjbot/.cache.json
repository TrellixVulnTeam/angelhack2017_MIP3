{"_id":"tjbot","_rev":"18-59e06183d691348fa0b021a089464ce6","name":"tjbot","description":"Node.js library for writing TJBot recipes","dist-tags":{"latest":"1.2.0"},"versions":{"0.0.1":{"name":"tjbot","version":"0.0.1","description":"wrapper for basic functions for a TJBot such as shine, wave, speak, listen etc. ","main":"tjbot.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://github.com/victordibia/tjbot.git"},"keywords":["tjbot"],"author":{"name":"Victor Dibia","email":"victor.dibia@gmail.com","url":"http://www.victordibia.com"},"license":"MIT","bugs":{"url":"https://github.com/victordibia/tjbot/issues"},"homepage":"https://github.com/victordibia/tjbot#readme","gitHead":"06b0df6aaa4ce0dad7bf57d596aea3e4995c15a9","_id":"tjbot@0.0.1","_shasum":"cbb9367ee8fd6e1878ec40aec1ef09fe96ea3d7e","_from":".","_npmVersion":"3.10.5","_nodeVersion":"6.2.2","_npmUser":{"name":"victordibia","email":"victor.dibia@gmail.com"},"dist":{"shasum":"cbb9367ee8fd6e1878ec40aec1ef09fe96ea3d7e","tarball":"https://registry.npmjs.org/tjbot/-/tjbot-0.0.1.tgz"},"maintainers":[{"name":"victordibia","email":"victor.dibia@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/tjbot-0.0.1.tgz_1485526723999_0.35505082458257675"},"directories":{}},"0.0.11":{"name":"tjbot","version":"0.0.11","description":"wrapper for basic functions for a TJBot such as shine, wave, speak, listen etc. ","main":"tjbot.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://github.com/victordibia/tjbot.git"},"keywords":["tjbot"],"author":{"name":"Victor Dibia","email":"victor.dibia@gmail.com","url":"http://www.victordibia.com"},"license":"MIT","bugs":{"url":"https://github.com/victordibia/tjbot/issues"},"homepage":"https://github.com/victordibia/tjbot#readme","gitHead":"0e107fd7993027d50c1d804b379119187011218a","_id":"tjbot@0.0.11","_shasum":"739f056e403c08adae7bcd3d3a82002017bb75e1","_from":".","_npmVersion":"3.10.5","_nodeVersion":"6.2.2","_npmUser":{"name":"victordibia","email":"victor.dibia@gmail.com"},"dist":{"shasum":"739f056e403c08adae7bcd3d3a82002017bb75e1","tarball":"https://registry.npmjs.org/tjbot/-/tjbot-0.0.11.tgz"},"maintainers":[{"name":"victordibia","email":"victor.dibia@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/tjbot-0.0.11.tgz_1485565066103_0.29301993804983795"},"directories":{}},"1.0.0":{"name":"tjbot","version":"1.0.0","description":"Node.js module for interacting with TJBot","main":"index.js","scripts":{"test":"mocha --reporter spec"},"author":{"name":"Justin Weisz"},"license":"Apache-2.0","dependencies":{"aplay":"^1.0.0","assert":"^1.4.1","asyncawait":"^1.0.6","color-model":"^0.2.2","colornames":"^1.1.1","fifo":"^2.3.0","mic":"^2.1.1","object.pick":"^1.2.0","pigpio":"^0.4.0","rpi-ws281x-native":"^0.8.1","semaphore":"^1.0.5","sleep":"^5.0.0","temp":"^0.8.3","twitter":"^1.5.0","web-audio-api":"^0.2.2","watson-developer-cloud":"^2.11.1"},"engines":{"node":">=4.2.4"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.2.0","prompt":"^1.0.0"},"gitHead":"baa2addaf553a1286caeb86363309e84f23bb8df","_id":"tjbot@1.0.0","_shasum":"babed14de199d6fb67bc52ade2029250cb82db7a","_from":".","_npmVersion":"3.10.5","_nodeVersion":"6.2.2","_npmUser":{"name":"victordibia","email":"victor.dibia@gmail.com"},"dist":{"shasum":"babed14de199d6fb67bc52ade2029250cb82db7a","tarball":"https://registry.npmjs.org/tjbot/-/tjbot-1.0.0.tgz"},"maintainers":[{"name":"victordibia","email":"victor.dibia@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/tjbot-1.0.0.tgz_1486778518041_0.5453475655522197"},"directories":{}},"0.0.2":{"name":"tjbot","version":"0.0.2","description":"Node.js module for interacting with TJBot","main":"index.js","scripts":{"test":"mocha --reporter spec"},"license":"Apache-2.0","dependencies":{"aplay":"^1.0.0","assert":"^1.4.1","asyncawait":"^1.0.6","color-model":"^0.2.2","colornames":"^1.1.1","fifo":"^2.3.0","mic":"^2.1.1","object.pick":"^1.2.0","pigpio":"^0.4.0","rpi-ws281x-native":"^0.8.1","semaphore":"^1.0.5","sleep":"^5.0.0","temp":"^0.8.3","twitter":"^1.5.0","web-audio-api":"^0.2.2","watson-developer-cloud":"^2.11.1"},"engines":{"node":">=4.2.4"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.2.0","prompt":"^1.0.0"},"gitHead":"4e6c5111b29311e109029e11732d92e1dcebf8fa","_id":"tjbot@0.0.2","_shasum":"4b21290da29c875f1f7f31aca1e28c1fa0a53cab","_from":".","_npmVersion":"3.10.5","_nodeVersion":"6.2.2","_npmUser":{"name":"victordibia","email":"victor.dibia@gmail.com"},"dist":{"shasum":"4b21290da29c875f1f7f31aca1e28c1fa0a53cab","tarball":"https://registry.npmjs.org/tjbot/-/tjbot-0.0.2.tgz"},"maintainers":[{"name":"victordibia","email":"victor.dibia@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/tjbot-0.0.2.tgz_1486778695507_0.8549949093721807"},"directories":{}},"0.0.3":{"name":"tjbot","version":"0.0.3","description":"Node.js module for interacting with TJBot","main":"index.js","scripts":{"test":"mocha --reporter spec"},"license":"Apache-2.0","dependencies":{"aplay":"^1.0.0","assert":"^1.4.1","asyncawait":"^1.0.6","color-model":"^0.2.2","colornames":"^1.1.1","fifo":"^2.3.0","mic":"^2.1.1","object.pick":"^1.2.0","pigpio":"^0.4.0","rpi-ws281x-native":"^0.8.1","semaphore":"^1.0.5","sleep":"^5.0.0","temp":"^0.8.3","twitter":"^1.5.0","web-audio-api":"^0.2.2","watson-developer-cloud":"^2.11.1"},"engines":{"node":">=4.2.4"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.2.0","prompt":"^1.0.0"},"bugs":{"url":"https://github.com/victordibia/tjbot/issues"},"homepage":"https://github.com/victordibia/tjbot#readme","gitHead":"88423564873e1669e33e81c964ea0c0d738d668e","_id":"tjbot@0.0.3","_shasum":"6ef09f2ad001627bc30ee33ba675659ef0ba7b91","_from":".","_npmVersion":"3.10.5","_nodeVersion":"6.2.2","_npmUser":{"name":"victordibia","email":"victor.dibia@gmail.com"},"dist":{"shasum":"6ef09f2ad001627bc30ee33ba675659ef0ba7b91","tarball":"https://registry.npmjs.org/tjbot/-/tjbot-0.0.3.tgz"},"maintainers":[{"name":"victordibia","email":"victor.dibia@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/tjbot-0.0.3.tgz_1487024346335_0.7677473665680736"},"directories":{}},"0.0.4":{"name":"tjbot","version":"0.0.4","description":"Node.js module for interacting with TJBot","main":"index.js","scripts":{"test":"mocha --reporter spec"},"license":"Apache-2.0","dependencies":{"aplay":"^1.0.0","assert":"^1.4.1","asyncawait":"^1.0.6","color-model":"^0.2.2","colornames":"^1.1.1","fifo":"^2.3.0","mic":"^2.1.1","object.pick":"^1.2.0","pigpio":"^0.4.0","rpi-ws281x-native":"^0.8.1","semaphore":"^1.0.5","sleep":"^5.0.0","temp":"^0.8.3","twitter":"^1.5.0","web-audio-api":"^0.2.2","watson-developer-cloud":"^2.11.1"},"engines":{"node":">=4.2.4"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.2.0","prompt":"^1.0.0"},"repository":{"type":"git","url":"git+github.com/victordibia/tjbot.git"},"bugs":{"url":"https://github.com/victordibia/tjbot/issues"},"homepage":"https://github.com/victordibia/tjbot#readme","gitHead":"84227ea5312395d9f08c378365f3de3a6880422e","_id":"tjbot@0.0.4","_shasum":"1c545af7edb3dc66923667a40024aefd1dd6125d","_from":".","_npmVersion":"3.10.5","_nodeVersion":"6.2.2","_npmUser":{"name":"victordibia","email":"victor.dibia@gmail.com"},"dist":{"shasum":"1c545af7edb3dc66923667a40024aefd1dd6125d","tarball":"https://registry.npmjs.org/tjbot/-/tjbot-0.0.4.tgz"},"maintainers":[{"name":"victordibia","email":"victor.dibia@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/tjbot-0.0.4.tgz_1487024801671_0.5681411034893245"},"directories":{}},"0.0.5":{"name":"tjbot","version":"0.0.5","description":"Node.js module for interacting with TJBot","main":"index.js","scripts":{"test":"mocha --reporter spec"},"license":"Apache-2.0","dependencies":{"aplay":"^1.0.0","assert":"^1.4.1","asyncawait":"^1.0.6","color-model":"^0.2.2","colornames":"^1.1.1","fifo":"^2.3.0","mic":"^2.1.1","object.pick":"^1.2.0","pigpio":"^0.4.0","rpi-ws281x-native":"^0.8.1","semaphore":"^1.0.5","sleep":"^5.0.0","temp":"^0.8.3","twitter":"^1.5.0","web-audio-api":"^0.2.2","watson-developer-cloud":"^2.11.1"},"engines":{"node":">=4.2.4"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.2.0"},"repository":{"type":"git","url":"git+https://github.com/victordibia/tjbot.git"},"bugs":{"url":"https://github.com/victordibia/tjbot/issues"},"homepage":"https://github.com/victordibia/tjbot#readme","gitHead":"6b1fcefd3abe9f41f51b00a481e689ae81920bdb","_id":"tjbot@0.0.5","_shasum":"7a5842d77752842c61bb04629418cc18c3156e68","_from":".","_npmVersion":"3.10.5","_nodeVersion":"6.2.2","_npmUser":{"name":"victordibia","email":"victor.dibia@gmail.com"},"dist":{"shasum":"7a5842d77752842c61bb04629418cc18c3156e68","tarball":"https://registry.npmjs.org/tjbot/-/tjbot-0.0.5.tgz"},"maintainers":[{"name":"victordibia","email":"victor.dibia@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/tjbot-0.0.5.tgz_1487025088836_0.9391616289503872"},"directories":{}},"0.0.6":{"name":"tjbot","version":"0.0.6","description":"Node.js module for interacting with TJBot","main":"index.js","scripts":{"test":"mocha --reporter spec"},"license":"Apache-2.0","dependencies":{"aplay":"^1.0.0","assert":"^1.4.1","asyncawait":"^1.0.6","color-model":"^0.2.2","colornames":"^1.1.1","fifo":"^2.3.0","mic":"^2.1.1","object.pick":"^1.2.0","pigpio":"^0.4.0","rpi-ws281x-native":"^0.8.1","semaphore":"^1.0.5","sleep":"^5.0.0","temp":"^0.8.3","twitter":"^1.5.0","web-audio-api":"^0.2.2","watson-developer-cloud":"^2.11.1"},"engines":{"node":">=4.2.4"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.2.0"},"repository":{"type":"git","url":"git+https://github.com/victordibia/tjbot.git"},"bugs":{"url":"https://github.com/victordibia/tjbot/issues"},"homepage":"https://github.com/victordibia/tjbot#readme","gitHead":"dcaae7ac7c5b25c2e3213815810ff5b45472de81","_id":"tjbot@0.0.6","_shasum":"c3b29d7d2ea3412f2688cde724d03e1b9ce0ac23","_from":".","_npmVersion":"3.10.5","_nodeVersion":"6.2.2","_npmUser":{"name":"victordibia","email":"victor.dibia@gmail.com"},"dist":{"shasum":"c3b29d7d2ea3412f2688cde724d03e1b9ce0ac23","tarball":"https://registry.npmjs.org/tjbot/-/tjbot-0.0.6.tgz"},"maintainers":[{"name":"victordibia","email":"victor.dibia@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/tjbot-0.0.6.tgz_1487025516367_0.6286222287453711"},"directories":{}},"0.0.7":{"name":"tjbot","version":"0.0.7","description":"Node.js module for interacting with TJBot","main":"index.js","scripts":{"test":"mocha --reporter spec"},"license":"Apache-2.0","dependencies":{"aplay":"^1.0.0","assert":"^1.4.1","asyncawait":"^1.0.6","color-model":"^0.2.2","colornames":"^1.1.1","fifo":"^2.3.0","mic":"^2.1.1","object.pick":"^1.2.0","pigpio":"^0.4.0","rpi-ws281x-native":"^0.8.1","semaphore":"^1.0.5","sleep":"^5.0.0","temp":"^0.8.3","twitter":"^1.5.0","web-audio-api":"^0.2.2","watson-developer-cloud":"^2.11.1"},"engines":{"node":">=4.2.4"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.2.0"},"repository":{"type":"git","url":"git+https://github.com/victordibia/tjbot.git"},"bugs":{"url":"https://github.com/victordibia/tjbot/issues"},"homepage":"https://github.com/victordibia/tjbot#readme","gitHead":"3bf4c7919378d00c716a5b5e9e5a0c9fdf0874eb","_id":"tjbot@0.0.7","_shasum":"45fb00e5bba6a079c9b7c6891401416c66efc781","_from":".","_npmVersion":"3.10.5","_nodeVersion":"6.2.2","_npmUser":{"name":"victordibia","email":"victor.dibia@gmail.com"},"dist":{"shasum":"45fb00e5bba6a079c9b7c6891401416c66efc781","tarball":"https://registry.npmjs.org/tjbot/-/tjbot-0.0.7.tgz"},"maintainers":[{"name":"victordibia","email":"victor.dibia@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/tjbot-0.0.7.tgz_1487084123240_0.5638367405626923"},"directories":{}},"0.0.8":{"name":"tjbot","version":"0.0.8","description":"Node.js module for interacting with TJBot","main":"index.js","scripts":{"test":"mocha --reporter spec"},"license":"Apache-2.0","dependencies":{"aplay":"^1.0.0","assert":"^1.4.1","asyncawait":"^1.0.6","color-model":"^0.2.2","colornames":"^1.1.1","fifo":"^2.3.0","mic":"^2.1.1","object.pick":"^1.2.0","pigpio":"^0.4.0","rpi-ws281x-native":"^0.8.1","semaphore":"^1.0.5","sleep":"^5.0.0","temp":"^0.8.3","twitter":"^1.5.0","web-audio-api":"^0.2.2","watson-developer-cloud":"^2.11.1"},"engines":{"node":">=4.2.4"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.2.0"},"repository":{"type":"git","url":"git+https://github.com/victordibia/tjbot.git"},"bugs":{"url":"https://github.com/victordibia/tjbot/issues"},"homepage":"https://github.com/victordibia/tjbot#readme","gitHead":"3439a7e3b40657dec3e8cfcdfd603d0b3b5996a7","_id":"tjbot@0.0.8","_shasum":"8a56f6f2a4ba198ae90ef0601f864637d92e3eac","_from":".","_npmVersion":"3.10.5","_nodeVersion":"6.2.2","_npmUser":{"name":"victordibia","email":"victor.dibia@gmail.com"},"dist":{"shasum":"8a56f6f2a4ba198ae90ef0601f864637d92e3eac","tarball":"https://registry.npmjs.org/tjbot/-/tjbot-0.0.8.tgz"},"maintainers":[{"name":"victordibia","email":"victor.dibia@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/tjbot-0.0.8.tgz_1487197613129_0.10649533220566809"},"directories":{}},"0.0.9":{"name":"tjbot","version":"0.0.9","description":"Node.js module for interacting with TJBot","main":"index.js","scripts":{"test":"mocha --reporter spec"},"license":"Apache-2.0","dependencies":{"aplay":"^1.0.0","assert":"^1.4.1","asyncawait":"^1.0.6","color-model":"^0.2.2","colornames":"^1.1.1","fifo":"^2.3.0","mic":"^2.1.1","object.pick":"^1.2.0","pigpio":"^0.4.0","rpi-ws281x-native":"^0.8.1","semaphore":"^1.0.5","sleep":"^5.0.0","temp":"^0.8.3","twitter":"^1.5.0","web-audio-api":"^0.2.2","watson-developer-cloud":"^2.11.1"},"engines":{"node":">=4.2.4"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.2.0"},"repository":{"type":"git","url":"git+https://github.com/ibmtjbot/tjbotlib.git"},"bugs":{"url":"https://github.com/ibmtjbot/tjbotlib/issues"},"homepage":"https://github.com/ibmtjbot/tjbotlib#readme","gitHead":"56049d9b5db0ec1457972a2e9f6c3ef165012bda","_id":"tjbot@0.0.9","_shasum":"63322d6b6f95e44a23fdea33e7ac58e700102448","_from":".","_npmVersion":"3.10.5","_nodeVersion":"6.2.2","_npmUser":{"name":"victordibia","email":"victor.dibia@gmail.com"},"dist":{"shasum":"63322d6b6f95e44a23fdea33e7ac58e700102448","tarball":"https://registry.npmjs.org/tjbot/-/tjbot-0.0.9.tgz"},"maintainers":[{"name":"victordibia","email":"victor.dibia@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/tjbot-0.0.9.tgz_1487274904410_0.3698727844748646"},"directories":{}},"0.0.10":{"name":"tjbot","version":"0.0.10","description":"Node.js library that abstracts basic functions for TJBot","main":"index.js","scripts":{"test":"mocha --reporter spec"},"license":"Apache-2.0","dependencies":{"aplay":"^1.0.0","assert":"^1.4.1","asyncawait":"^1.0.6","color-model":"^0.2.2","colornames":"^1.1.1","fifo":"^2.3.0","mic":"^2.1.1","object.pick":"^1.2.0","pigpio":"^0.4.0","rpi-ws281x-native":"^0.8.1","semaphore":"^1.0.5","sleep":"^5.0.0","temp":"^0.8.3","twitter":"^1.5.0","web-audio-api":"^0.2.2","watson-developer-cloud":"^2.11.1"},"engines":{"node":">=4.2.4"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.2.0"},"repository":{"type":"git","url":"git+https://github.com/ibmtjbot/tjbotlib.git"},"bugs":{"url":"https://github.com/ibmtjbot/tjbotlib/issues"},"homepage":"https://github.com/ibmtjbot/tjbotlib#readme","gitHead":"27a23079dda815d79be8b6b07bf749f41a6abb1b","_id":"tjbot@0.0.10","_shasum":"e9ba2b18c4a1ff0858d87d49d533318efce91723","_from":".","_npmVersion":"3.10.5","_nodeVersion":"6.2.2","_npmUser":{"name":"victordibia","email":"victor.dibia@gmail.com"},"dist":{"shasum":"e9ba2b18c4a1ff0858d87d49d533318efce91723","tarball":"https://registry.npmjs.org/tjbot/-/tjbot-0.0.10.tgz"},"maintainers":[{"name":"victordibia","email":"victor.dibia@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/tjbot-0.0.10.tgz_1487394212709_0.08735003508627415"},"directories":{}},"1.1.0":{"name":"tjbot","description":"Node.js library for writing TJBot recipes","version":"1.1.0","author":{"name":"Justin Weisz","email":"jweisz@us.ibm.com"},"bugs":{"url":"https://github.com/ibmtjbot/tjbotlib/issues"},"dependencies":{"aplay":"^1.0.0","assert":"^1.4.1","asyncawait":"^1.0.6","color-model":"^0.2.2","colornames":"^1.1.1","fifo":"^2.3.0","mic":"^2.1.1","node-raspistill":"0.0.9","object.pick":"^1.2.0","semaphore":"^1.0.5","sleep":"^5.0.0","temp":"^0.8.3","watson-developer-cloud":"^2.11.1","web-audio-api":"^0.2.2","pigpio":"^0.4.0","rpi-ws281x-native":"^0.8.1"},"engines":{"node":">=4.2.4"},"homepage":"https://github.com/ibmtjbot/tjbotlib","keywords":["tjbot"],"license":"Apache-2.0","main":"index.js","optionalDependencies":{"pigpio":"^0.4.0","rpi-ws281x-native":"^0.8.1"},"repository":{"type":"git","url":"git+https://github.com/ibmtjbot/tjbotlib.git"},"scripts":{"test":"mocha --reporter spec"},"gitHead":"0f859a25cd1c6af1381bdda62e2b8237a7f04521","_id":"tjbot@1.1.0","_shasum":"949de5127404ba52e64b95e0e3c60ab2aede608d","_from":".","_npmVersion":"3.10.5","_nodeVersion":"6.2.2","_npmUser":{"name":"victordibia","email":"victor.dibia@gmail.com"},"dist":{"shasum":"949de5127404ba52e64b95e0e3c60ab2aede608d","tarball":"https://registry.npmjs.org/tjbot/-/tjbot-1.1.0.tgz"},"maintainers":[{"name":"victordibia","email":"victor.dibia@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/tjbot-1.1.0.tgz_1490627682958_0.8181232430506498"},"directories":{}},"1.2.0":{"name":"tjbot","description":"Node.js library for writing TJBot recipes","version":"1.2.0","author":{"name":"Justin Weisz","email":"jweisz@us.ibm.com"},"bugs":{"url":"https://github.com/ibmtjbot/tjbotlib/issues"},"dependencies":{"aplay":"^1.0.0","assert":"^1.4.1","asyncawait":"^1.0.6","color-model":"^0.2.2","colornames":"^1.1.1","fifo":"^2.3.0","mic":"^2.1.1","node-raspistill":"0.0.9","object.pick":"^1.2.0","semaphore":"^1.0.5","sleep":"^5.0.0","temp":"^0.8.3","watson-developer-cloud":"^2.11.1","winston":"^2.3.1","pigpio":"^0.4.0","rpi-ws281x-native":"^0.8.1"},"engines":{"node":">=4.2.4"},"homepage":"https://github.com/ibmtjbot/tjbotlib","keywords":["tjbot"],"license":"Apache-2.0","main":"index.js","optionalDependencies":{"pigpio":"^0.4.0","rpi-ws281x-native":"^0.8.1"},"repository":{"type":"git","url":"git+https://github.com/ibmtjbot/tjbotlib.git"},"scripts":{"test":"mocha --reporter spec"},"devDependencies":{"mocha":"^3.2.0"},"gitHead":"e7f099262065e87ea3b62aa28435bbf86f142c19","_id":"tjbot@1.2.0","_shasum":"dfe2d10e3b4642c016c735e2b3619152019ae763","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.4","_npmUser":{"name":"jweisz3","email":"jweisz@us.ibm.com"},"dist":{"shasum":"dfe2d10e3b4642c016c735e2b3619152019ae763","tarball":"https://registry.npmjs.org/tjbot/-/tjbot-1.2.0.tgz"},"maintainers":[{"name":"jweisz3","email":"jweisz@us.ibm.com"},{"name":"victordibia","email":"victor.dibia@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/tjbot-1.2.0.tgz_1490652175905_0.08925886382348835"},"directories":{}}},"readme":"# TJBot Library\n\n> Node.js library that encapsulates TJBot's basic capabilities: seeing, listening, speaking, shining, etc.\n\nThis library can be used to create your own recipes for [TJBot](http://ibm.biz/mytjbot).\n\nSome of TJBot's capabilities require specific [IBM Watson](https://www.ibm.com/watson/developercloud/services-catalog.html) services. For example, \"seeing\" is powered by the [Watson Visual Recognition](https://www.ibm.com/watson/developercloud/visual-recognition.html) service. Similarly, speaking and listening are powered by the [Watson Text to Speech](https://www.ibm.com/watson/developercloud/text-to-speech.html) and [Watson Speech to Text](https://www.ibm.com/watson/developercloud/speech-to-text.html) services.\n\nTo use these services, you will need to specify credentials for each of the Watson services you are interested in using.\n\n# Usage\n\nInstall the library as follows.\n\n```\n$ npm install --save tjbot\n```\n\n> Note: The TJBot library was developed for use on Raspberry Pi. It may be possible to develop and test portions of this library on other Linux-based systems (e.g. Ubuntu), but this usage is not officially supported.\n\nInstantiate the `TJBot` object.\n\n```\nconst TJBot = require('tjbot');\n\nvar hardware = ['led', 'servo', 'microphone', 'speaker'];\nvar configuration = {\n    robot: {\n        gender: 'female'\n    },\n    listen: {\n        language: 'ja-JP'\n    },\n    speak: {\n        language: 'en-US'\n    }\n};\nvar credentials = {\n    speech_to_text: {\n        username: 'xxx',\n        password: 'xxx'\n    },\n    text_to_speech: {\n        username: 'xxx',\n        password: 'xxx'\n    }\n}\nvar tj = new TJBot(hardware, configuration, credentials);\n```\n\nThis will configure your TJBot as a female robot having an `LED`, `servo`, `microphone`, and `speaker`, and with the Watson `speech_to_text` and `text_to_speech` services. In addition, this robot is configured to listen in Japanese and speak in English (using a female voice).\n\nThe default configuration of TJBot uses English as the main language with a male voice.\n\n# Capabilities\n\nTJBot has a number of capabilities that you can use to bring him to life. Capabilities are combinations of hardware and Watson services that enable TJBot's functionality. For example, \"listening\" is a combination of having a `speaker` and the `speech_to_text` service. Internally, the `_assertCapability()` method checks to make sure your TJBot is configured with the right hardware and services before it performs an action that depends on having a capability. Thus, the method used to make TJBot listen, `tj.listen()`, first checks that your TJBot has been configured with a `speaker` and the `speech_to_text` service.\n\nTJBot's capabilities are:\n\n- **Analyzing Tone**, which requres the [Watson Tone Analyzer](https://www.ibm.com/watson/developercloud/tone-analyzer.html) service\n- **Conversing**, which requires the [Watson Conversation](https://www.ibm.com/watson/developercloud/conversation.html) service\n- **Listening**, which requires a microphone and the [Watson Speech to Text](https://www.ibm.com/watson/developercloud/speech-to-text.html) service\n- **Seeing**, which requires a camera and the [Watson Visual Recognition](https://www.ibm.com/watson/developercloud/visual-recognition.html) service\n- **Shining**, which requires an LED\n- **Speaking**, which requires a speaker and the [Watson Text to Speech](https://www.ibm.com/watson/developercloud/text-to-speech.html) service\n- **Translating**, which requires the [Watson Language Translator](https://www.ibm.com/watson/developercloud/language-translator.html) service\n- **Waving**, which requires a servo motor\n\nThe full list of capabilities can be accessed programatically via `TJBot.prototype.capabilities`, the full list of hardware components can be accessed programatically via `TJBot.prototype.hardware`, and the full list of Watson services can be accessed programatically via `TJBot.prototype.services`.\n\n# TJBot API\n\n## Constructor\n\nThe `TJBot` constructor takes three arguments: the list of hardware present in the robot, the configuration of the robot, and the set of Watson credentials.\n\n```\nfunction TJBot(hardware, configuration, credentials)\n```\n\nValid options for `hardware` are defined in `TJBot.prototype.hardware`: `camera`, `led`, `microphone`, `servo`, and `speaker`.\n\nThe `credentials` object expects credentials to be defined for each Watson service needed by your application. Valid Watson services are defined in `TJBot.prototype.services`: `conversation`, `language_translator`, `speech_to_text`, `text_to_speech`, `tone_analyzer`, and `visual_recognition`.\n\nPlease see `TJBot.prototype._createServiceAPI()` to understand what kind of credentials are required for each specific service. Most services expect a `username` and `password`, although some (e.g. `visual_recognition`) expect an API `key`.\n\nExample credentials object:\n\n```\nvar credentials = {\n\tconversation: {\n\t\tusername: 'xxx',\n\t\tpassword: 'yyy'\n\t},\n\tlanguage_translator: {\n\t\tusername: 'xxx',\n\t\tpassword: 'yyy'\n\t},\n\tspeech_to_text: {\n\t\tusername: 'xxx',\n\t\tpassword: 'yyy'\n\t},\n\ttext_to_speech: {\n\t\tusername: 'xxx',\n\t\tpassword: 'yyy'\n\t},\n\ttone_analyzer: {\n\t\tusername: 'xxx',\n\t\tpassword: 'yyy'\n\t},\n\tvisual_recognition: {\n\t\tkey: 'xxx'\n\t}\n};\n```\n\n## Configuration\n\nTJBot has a number of configuration options for its hardware and behaviors. Defaults are given in `TJBot.prototype.defaultConfiguration`, and these are overridden by any options specified in the `TJBot` constructor.\n\nThe most common configuration options are:\n\n- `robot.name`: This is the name of your TJBot! You can use this in your recipes to know when someone is speaking to your TJBot. The default name is 'Watson'.\n- `robot.gender`: This is used to specify which voice is used in `text_to_speech`. Can either be `\"male\"` or `\"female\"`.\n- `listen.language`: This is used to specify the language in which `speech_to_text` listens. See `TJBot.prototype.languages.listen` for all available options.\n- `speak.language`: This is used to specify the language in which `text_to_speech` speaks. See `TJBot.prototype.languages.speak` for all available options.\n- `verboseLogging`: Setting this to `true` will cause debug messages to be printed to the console.\n\nAdditional configuration options allow you to specify the PIN to which the servo is connected (`wave.servoPin`), the resolution of images captured from the camera (`see.camera.*`), thresholds on the confidence of object recognition for `visual_recognition` (`see.confidenceThreshold.*`), and the device ID used to access the microphone (`listen.microphoneDeviceId`).\n\n# API Methods\nA description of the public TJBot API is given below. There are a number of internal library methods that are prefixed with an underscore (`_`); these methods are not intended for use outside the scope of the library.\n\nIf you do need low-level access to the Watson APIs beyond the level provided by `TJBot`, you can access them as follows:\n\n```\nvar tj = new TJBot(hardware, configuration, credentials);\ntj._conversation; // the ConversationV1 service object\ntj._languageTranslator; // the LanguageTranslatorV2 service object\ntj._stt; // the SpeechToTextV1 service object\ntj._tts; // the TextToSpeechV1 service object\ntj._toneAnalyzer; // the ToneAnalyzerV3 service object\ntj._visualRecognition; // the VisualRecognitionV3 service object\n```\n\nPlease see the documentation for the [Watson Node SDK](https://github.com/watson-developer-cloud/node-sdk) for more details on these objects.\n\n## Utility methods\n\n### tj.sleep(msec)\n\nSleeps for the given number of milliseconds.\n\n- `msec` is the number of milliseconds to sleep for.\n\nSleeping blocks the Node.js event loop.\n\n## Analyze Tone\n\n### tj.analyzeTone(text)\n\nAnalyzes the given text for the presence of emotions.\n\n- `text` is the text to be analyzed\n\nSample usage:\n\n```\ntj.analyzeTone(\"hello world\").then(function(response) {\n    ...\n});\n```\n\nSample response:\n\n```\nresponse = {\n  \"sentences_tone\": [\n    {\n      \"sentence_id\": 0,\n      \"text\": \"hello world\",\n      \"tone_categories\": [\n        {\n          \"tones\": [\n            {\n              \"score\": 0.058017,\n              \"tone_id\": \"anger\",\n              \"tone_name\": \"Anger\"\n            },\n            {\n              \"score\": 0.09147,\n              \"tone_id\": \"disgust\",\n              \"tone_name\": \"Disgust\"\n            },\n            {\n              \"score\": 0.045435,\n              \"tone_id\": \"fear\",\n              \"tone_name\": \"Fear\"\n            },\n            {\n              \"score\": 0.45124,\n              \"tone_id\": \"joy\",\n              \"tone_name\": \"Joy\"\n            },\n            {\n              \"score\": 0.203841,\n              \"tone_id\": \"sadness\",\n              \"tone_name\": \"Sadness\"\n            }\n          ],\n          \"category_id\": \"emotion_tone\",\n          \"category_name\": \"Emotion Tone\"\n        },\n        {\n          \"tones\": [\n            {\n              \"score\": 0,\n              \"tone_id\": \"analytical\",\n              \"tone_name\": \"Analytical\"\n            },\n            {\n              \"score\": 0,\n              \"tone_id\": \"confident\",\n              \"tone_name\": \"Confident\"\n            },\n            {\n              \"score\": 0,\n              \"tone_id\": \"tentative\",\n              \"tone_name\": \"Tentative\"\n            }\n          ],\n          \"category_id\": \"language_tone\",\n          \"category_name\": \"Language Tone\"\n        },\n        {\n          \"tones\": [\n            {\n              \"score\": 0.260072,\n              \"tone_id\": \"openness_big5\",\n              \"tone_name\": \"Openness\"\n            },\n            {\n              \"score\": 0.274462,\n              \"tone_id\": \"conscientiousness_big5\",\n              \"tone_name\": \"Conscientiousness\"\n            },\n            {\n              \"score\": 0.540392,\n              \"tone_id\": \"extraversion_big5\",\n              \"tone_name\": \"Extraversion\"\n            },\n            {\n              \"score\": 0.599104,\n              \"tone_id\": \"agreeableness_big5\",\n              \"tone_name\": \"Agreeableness\"\n            },\n            {\n              \"score\": 0.278807,\n              \"tone_id\": \"emotional_range_big5\",\n              \"tone_name\": \"Emotional Range\"\n            }\n          ],\n          \"category_id\": \"social_tone\",\n          \"category_name\": \"Social Tone\"\n        }\n      ],\n      \"className\": \"original-text--sentence_joy-low\"\n    }\n  ]\n}\n```\n\n## Converse\n\n### tj.converse(workspaceId, message, callback)\n\nTakes a conversational turn in the Conversation service.\n\n- `workspaceId` specifies the workspace ID of the conversation in the Watson Conversation service\n- `message` is the text of the conversational turn\n- `callback` is called with the conversational response\n\nSample usage:\n\n```\ntj.converse(workspaceId, \"hello world\", function(response) {\n    ...\n});\n```\n\nSample response:\n\n```\nresponse = {\n    \"object\": {conversation response object},\n    \"description\": \"hello, how are you\"\n}\n```\n\n## Listen\n\n### tj.listen(callback)\n\nOpens the microphone and streams data to the `speech_to_text` service.\n\n- `callback` is called with speech utterances as they are produced\n\nSample usage:\n\n```\ntj.listen(function(text) {\n    ...\n});\n```\n\nSample response:\n\n```\ntext = \"hello tjbot my name is bobby\"\n```\n\n### tj.pauseListening()\n\nPauses listening.\n\n### tj.resumeListening()\n\nResumes listening.\n\n### tj.stopListening()\n\nStops listening.\n\n## See\n\n### tj.see()\n\nReturns a list of objects seen and their confidences.\n\nSample usage:\n\n```\ntj.see().then(function(objects) {\n    ...\n});\n```\n\nSample resposne:\n\n```\nobjects = \n[\n    {\n        \"class\": \"apple\",\n        \"score\": 0.645656\n    },\n    {\n        \"class\": \"fruit\",\n        \"score\": 0.598688\n    },\n    {\n        \"class\": \"food\",\n        \"score\": 0.598688\n    },\n    {\n        \"class\": \"orange\",\n        \"score\": 0.5\n    },\n    {\n        \"class\": \"vegetable\",\n        \"score\": 0.28905\n    },\n    {\n        \"class\": \"tree\",\n        \"score\": 0.28905\n    }\n]\n```\n\n### tj.read()\n\nReturns a list of text strings read by TJBot.\n\nSample usage:\n\n```\ntj.read().then(function(texts) {\n    ...\n});\n```\n\nSample resposne:\n\n```\nTBD\n```\n\n## Shine\n\n### tj.shine(color)\n\nShines the LED the specified color.\n\n- `color` may be specified as a name, e.g. `'red'` or `'blue'`, or it may be specified as a hex string, e.g. `'#FF0000'` or `'#0000FF'`.\n\nA full list of colors that TJBot understands can be accessed via `tj.shineColors()`.\n\nSample usage:\n\n```\ntj.shine('orange');\ntj.shine('pink');\ntj.shine('#0A2C9F');\n```\n\n### tj.pulse(color, duration, delay)\n\nPulses the LED the given color (e.g. fades in and out to the given color).\n\n- `color` specifies the color of the pulse\n- `duration` specifies how long the pulse should last\n- `delay` specifies how long to wait in between pulses\n\nThis method returns instantly, but TJBot will continue to pulse the LED until `tj.stopPulsing()` is called.\n\n### tj.isPulsing()\n\nReturns `true` if TJBot is currently pulsing the LED and `false` otherwise.\n\n### tj.stopPulsing()\n\nStops pulsing the LED.\n\n### tj.shineColors()\n\nReturns an array of all of the colors that TJBot understands.\n\n### tj.randomColor()\n\nSelects a random color from the array returned by `tj.shineColors()`.\n\n## Speak\n\n## tj.speak(message)\n\nSpeaks the given message using `text_to_speech`.\n\n- `message` is the message to speak\n\nSample usage:\n\n```\ntj.speak(\"hello world\").then(function() {\n    return tj.speak(\"my name is tjbot\");\n}).then(function () {\n    return tj.speak(\"it's very nice to meet you!\");\n});\n```\n\nIn this example, TJBot will first speak \"hello world\". After audio playback has finished, it will then speak \"my name is tjbot\". After audio playback has finished, it will then speak \"it's very nice to meet you!\". The [Promise pattern](https://en.wikipedia.org/wiki/Futures_and_promises) is used here to ensure that statements can be spoken consecutively without interference.\n\n## tj.play(soundFile)\n\nPlays the given sound file.\n\n- `soundFile` is the path to the sound file to play\n\nSample usage:\n\n```\ntj.play('/usr/share/doc/Greenfoot/scenarios/lunarlander/sounds/Explosion.wav');\n```\n\n# Translate\n\n## tj.translate(text, sourceLanguage, targetLanguage)\n\nTranslates the given text from the source language to the target language.\n\n- `sourceLanguage` is the 2 character string that identifies the language from which to translate\n- `targetLanguage` is the 2 character string that identifies the language to which to translate\n\n> Note: Not all languages can be translated to other languages! Use the method `tj.isTranslatable()` to determine if a translation model exists between a soruce and target langauge.\n\nBelow are examples of common languages and the 2 character strings used to represent them.\n\n| Language | Code |\n|---|---|\n| Arabic | ar |\n| Chinese | zh |\n| German | de |\n| English | en |\n| French | fr |\n| Italian | it |\n| Japanese | ja |\n| Korean | ko |\n| Spanish | es |\n| Portuguese | pt |\n\nSample usage:\n\n```\ntj.translate(\"Hello, my name is TJBot!\", 'en', 'es').then(function(translation) {\n    ...\n});\n```\n\nSample response:\n\n```\ntranslation = {\n\t\"translations\":[\n\t\t{\n\t\t\t\"translation\":\"Hola, mi nombre es TJBot!\"\n\t\t}\n\t],\n\t\"word_count\":5,\n\t\"character_count\":24\n}\n```\n\n## tj.identifyLanguage(text)\n\nIdentifies the language in which the text was written.\n\n- `text` is the text whose language should be identified\n\nSample usage:\n\n```\ntj.identifyLanguage(\"Hello, my name is TJBot!\").then(function(languages) {\n    ...\n});\n\n```\n\nSample response:\n\n```\nlanguages = {\n\t\"languages\":[\n\t\t{\n\t\t\t\"language\":\"en\",\n\t\t\t\"confidence\":0.865653\n\t\t},\n\t\t{\n\t\t\t\"language\":\"af\",\n\t\t\t\"confidence\":0.039473\n\t\t},\n\t\t{\n\t\t\t\"language\":\"nl\",\n\t\t\t\"confidence\":0.0276556\n\t\t},\n\t\t{\n\t\t\t\"language\":\"nn\",\n\t\t\t\"confidence\":0.0216675\n\t\t},\n\t\t...\n\t]\n}\n```\n\n## tj.isTranslatable(sourceLanguage, targetLanguage)\n\nReturns a Promise that resolves to `true` if there exists a translation model between the source language and the target language.\n\n- `sourceLanguage` is the 2 character string that identifies the source language\n- `targetLanguage` is the 2 character string that identifies the target language\n\n> Note: This method is asynchronous due to the need to load the list of translation models available. If you are confident that the list of translation models has been loaded (e.g. you call `tj.isTranslatable()` a few seconds after your script has been running), you may wish to use the internal method `tj._isTranslatable()` instead.\n\nSample usage:\n\n```\ntj.isTranslatable('en', 'es').then(function(result) {\n    if (result) {\n        console.log(\"TJBot can translate between English and Spanish!\");\n    } else {\n        console.log(\"TJBot cannot translate between English and Spanish.\");\n    }\n});\n```\n\nSample response:\n\n```\nTJBot can translate between English and Spanish!\n```\n\n# Wave\n\n## tj.armBack()\n\nCauses TJBot to move its arm backward (like a wind-up for a pitch).\n\n> Note: if this method doesn't produce the expected result, the servo motor stop points may need to be overridden. Override the value of `TJBot.prototype._SERVO_ARM_BACK` to find a stop point that satisfies the \"back\" position. Note that valid servo values are in the range [500, 2300].\n\n## tj.raiseArm()\n\nCauses TJBot to raise its arm to the upward position.\n\n> Note: if this method doesn't produce the expected result, the servo motor stop points may need to be overridden. Override the value of `TJBot.prototype._SERVO_ARM_UP` to find a stop point that satisfies the \"back\" position. Note that valid servo values are in the range [500, 2300].\n\n## tj.lowerArm()\n\nCauses TJBot to lower its arm to the downward position.\n\n> Note: if this method doesn't produce the expected result, the servo motor stop points may need to be overridden. Override the value of `TJBot.prototype._SERVO_ARM_DOWN` to find a stop point that satisfies the \"back\" position. Note that valid servo values are in the range [500, 2300].\n\n## tj.wave()\n\nCauses TJBot to wave the arm once (up-down-up).\n\n# Contributing\nWe encourage you to make enhancements to this library and contribute them back to us via a pull request.\n\n# License\nThis project uses the [Apache License Version 2.0](LICENSE) software license.\n","maintainers":[{"name":"jweisz3","email":"jweisz@us.ibm.com"},{"name":"victordibia","email":"victor.dibia@gmail.com"}],"time":{"modified":"2017-03-29T17:02:50.825Z","created":"2017-01-27T14:18:44.561Z","0.0.1":"2017-01-27T14:18:44.561Z","0.0.11":"2017-01-28T00:57:46.733Z","1.0.0":"2017-02-11T02:02:00.625Z","0.0.2":"2017-02-11T02:04:58.720Z","0.0.3":"2017-02-13T22:19:06.905Z","0.0.4":"2017-02-13T22:26:42.274Z","0.0.5":"2017-02-13T22:31:31.351Z","0.0.6":"2017-02-13T22:38:38.724Z","0.0.7":"2017-02-14T14:55:23.888Z","0.0.8":"2017-02-15T22:26:55.432Z","0.0.9":"2017-02-16T19:55:06.923Z","0.0.10":"2017-02-18T05:03:35.032Z","1.1.0":"2017-03-27T15:14:45.218Z","1.2.0":"2017-03-27T22:02:56.637Z"},"license":"Apache-2.0","readmeFilename":"README.md","homepage":"https://github.com/ibmtjbot/tjbotlib","bugs":{"url":"https://github.com/ibmtjbot/tjbotlib/issues"},"repository":{"type":"git","url":"git+https://github.com/ibmtjbot/tjbotlib.git"},"keywords":["tjbot"],"author":{"name":"Justin Weisz","email":"jweisz@us.ibm.com"},"users":{"jesusprubio":true},"_attachments":{},"_etag":"W/\"58dbe8ba-9a93\"","_lastModified":"Wed, 29 Mar 2017 17:02:50 GMT"}