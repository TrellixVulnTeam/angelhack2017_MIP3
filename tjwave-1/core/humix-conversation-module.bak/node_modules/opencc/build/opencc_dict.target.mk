# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := opencc_dict
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=opencc_dict' \
	'-DVERSION="1.0.4"' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DDEBUG' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-std=c++0x \
	-g \
	-O0

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-std=gnu++0x

INCS_Debug := \
	-I/home/pi/.node-gyp/4.2.6/include/node \
	-I/home/pi/.node-gyp/4.2.6/src \
	-I/home/pi/.node-gyp/4.2.6/deps/uv/include \
	-I/home/pi/.node-gyp/4.2.6/deps/v8/include \
	-I$(srcdir)/src \
	-I$(srcdir)/deps/darts-clone \
	-I$(srcdir)/deps/tclap-1.2.1

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=opencc_dict' \
	'-DVERSION="1.0.4"' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64'

# Flags passed to all source files.
CFLAGS_Release := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-std=c++0x \
	-O3 \
	-ffunction-sections \
	-fdata-sections \
	-fno-omit-frame-pointer

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-std=gnu++0x

INCS_Release := \
	-I/home/pi/.node-gyp/4.2.6/include/node \
	-I/home/pi/.node-gyp/4.2.6/src \
	-I/home/pi/.node-gyp/4.2.6/deps/uv/include \
	-I/home/pi/.node-gyp/4.2.6/deps/v8/include \
	-I$(srcdir)/src \
	-I$(srcdir)/deps/darts-clone \
	-I$(srcdir)/deps/tclap-1.2.1

OBJS := \
	$(obj).target/$(TARGET)/src/BinaryDict.o \
	$(obj).target/$(TARGET)/src/DartsDict.o \
	$(obj).target/$(TARGET)/src/Dict.o \
	$(obj).target/$(TARGET)/src/DictEntry.o \
	$(obj).target/$(TARGET)/src/DictGroup.o \
	$(obj).target/$(TARGET)/src/TextDict.o \
	$(obj).target/$(TARGET)/src/UTF8Util.o \
	$(obj).target/$(TARGET)/src/tools/DictConverter.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-rdynamic

LDFLAGS_Release := \
	-pthread \
	-rdynamic

LIBS :=

$(builddir)/opencc_dict: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/opencc_dict: LIBS := $(LIBS)
$(builddir)/opencc_dict: LD_INPUTS := $(OBJS)
$(builddir)/opencc_dict: TOOLSET := $(TOOLSET)
$(builddir)/opencc_dict: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,link)

all_deps += $(builddir)/opencc_dict
# Add target alias
.PHONY: opencc_dict
opencc_dict: $(builddir)/opencc_dict

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/opencc_dict

